<% layout('./layouts/layouts.ejs') -%>
<body>
    <!-- <form action="/<%= id %>/booking" method="post">
        <input type="text" name="booking[name]" required placeholder="Enter full name">
        <input type="datetime-local", name="booking[checkIn]" required placeholder="check-in time/date">
        <input type="datetime-local", name="booking[checkOut]" required placeholder="check-out time/date">
        <input type="number" name="booking[number]" required placeholder="number of quests" min="1" max="5">
        <input type="tel" required placeholder="contact no." pattern="[0-9]{10}" name="booking[phoneNum]">
        <input type="email" required placeholder="Enter email" name="booking[email]">
        <input type="text" required placeholder="Any special request" name="booking[specialReq]">
        <button>Confirm Booking</button>
    </form> -->

    <div class="row">
        <div class="col-8 offset-2">
                <br><br>
            <form action="/<%= id %>/booking" method="post" id="bookingForm" novalidate class="needs-validation" >
                    <h2>Enter your details</h2> <br>
                    <div class="title mb-3">
                        <label for="name"  class="form-label" >Name</label>
                        <input type="text" id="name" placeholder="Enter your legal name" name="booking[name]" class="form-control"required >

                        <div class="invalid-feedback">Please enter your name</div>
                    </div>

                    <div class="description mb-3">
                        <label for="number"  name="numOfQuest"class="form-label">Number of quests</label>
                        <input type="number" id="numOfQuest" min="1" max="4" placeholder="max-4" class="form-control" name="booking[number]"required></input>

                        <div class="invalid-feedback">maximum 4 quest are allowed </div>
                    </div>

                    <div class="location mb-3">
                        <label for="phoneNum" name="phoneNum"  class="form-label">Contact No.</label>
                        <input type="tel" id="phoneNum" name="booking[phoneNum]" pattern="[0-9]{10}" class="form-control"required>

                        <div class="invalid-feedback">Enter valid number</div>
                    </div>
                    

                <div class="row">
                    <div class="country mb-3 col-md-4">
                        <label for="checkIn"name="checkIn"  class="form-label">Check-In Time</label>
                        <input type="datetime-local" id="checkIn" name="booking[checkIn]" class="form-control" required>

                        <div class="invalid-feedback">Check-In time needed</div>
                    </div>
                    
                    <div class="price mb-3 col-md-3">
                        <label for="checkOut" name="checkOut"  class="form-label" >Check-Out Time</label>
                        <input  type="datetime-local" id="checkOut" class="form-control" name="booking[checkOut]" required>

                        <div class="invalid-feedback">Check-Out time needed </div>
                    </div>
                </div>  

                <div class="location mb-3">
                    <label for="email" name="email"  class="form-label">Email address</label>
                    <input type="email" id="email" name="booking[email]" placeholder="( You'll get an email of confirmation )" class="form-control"required>

                    <div class="invalid-feedback">Enter valid email address</div>
                </div>
                
                <div class="location mb-3">
                    <label for="specialReq" name="specialReq"  class="form-label">Any special request</label>
                    <textarea type="text" id="specialReq" name="booking[specialReq]" placeholder="We'll try our best to fullfil it" class="form-control"></textarea>
                </div>

                

                <div class="location mb-3 d-flex align-items-center" >
                    <div style="width: 682px;">
                        <label for="priceDisplay" name="priceDisplay"   class="form-label">Price:</label>
                        <span class="form-contro priceDisplay" id="priceDisplay" data-price="<%= listing.price %>"></span>
                    </div>
                   
                   <p style="opacity: 0.5;"> (payment integration is in testmode so you can just put success@razorpay in upi section to see the demo)</p>
                    <!-- <button class="btn btn-dark  payNow" type="button" id="payNow">Pay now</button> -->
                </div>
           
                <br>
                <button class="btn btn-dark add-btn" id="payAndBook" type="submit">Pay and confirm Booking</button> <br> <br>
            </form>
        </div>
    </div>


    <script>
        addEventListener("DOMContentLoaded", function (){
            console.log("Everything is loaded")
            const checkInTime = document.getElementById("checkIn");
            const checkOutTime = document.getElementById("checkOut");
            const priceDisplay = document.getElementById("priceDisplay");
            // console.log("haha",priceDisplay.dataset.price);
    
            async function calculatePrice(){
                const checkIn = checkInTime.value;
                const checkOut = checkOutTime.value;
                const pricePerNight = parseFloat(priceDisplay.dataset.price);
                
                
                if( checkIn && checkOut && new Date(checkOut) > new Date(checkIn)){
                    //sending ajax request to server from this script(that is client side)
                    console.log("missing")
                    const response = await fetch("/calculateprice", {
                        method: "POST",
                        headers : {
                            'Content-Type' : "application/json"
                        },
                        body: JSON.stringify({
                            checkIn,
                            checkOut,
                            pricePerNight
                        })
                    })
                    const data = await response.json(); //converting json response into js objects(.json works opposite for server side )
                    priceDisplay.textContent = data.totalPrice.toFixed(2);
                }else{
                    priceDisplay.textContent = "0";
                    
                }
                console.log("here it is ======>", pricePerNight);
            }
    
            checkInTime.addEventListener("change",calculatePrice );
            checkOutTime.addEventListener("change", calculatePrice);
    
        })

        document.getElementById("payAndBook").addEventListener("click", async function(){
            event.preventDefault();

            const bookingForm = document.getElementById("bookingForm");
            if (!bookingForm.checkValidity()) {
        bookingForm.classList.add("was-validated"); // Bootstrap validation class
        bookingForm.reportValidity(); // Show validation messages
        return; // Stop execution if form is invalid
    }



            
            const priceDisplay = document.getElementById("priceDisplay");
            const listingAmount = parseFloat(priceDisplay.dataset.price);
            const customerName = document.getElementById("name").value;
            const customerEmail = document.getElementById("email").value;
            const customerContact = document.getElementById("phoneNum").value;
            const response = await fetch("/create-order", {
                method: "Post",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({ amount: listingAmount})
            });

            const order = await response.json();
            if(!order.id) return alert("Order creation failed");

            const options = {
                key: "<%= key%>",
                amount: order.amount,
                currency: order.currency,
                name: "Wanderlust",
                description: "Payment for you rental home",
                order_id: order.id,
                handler: async function(res){
                  const result =  await fetch ("/verify", {
                        method: "Post",
                        headers: {
                            "Content-Type": "application/json",
                        },
                        body: JSON.stringify(res)
                    });
                    const data = await result.json();
                    if(data.success){
                        alert(data.success)
                    }else{
                        alert("payment failed")
                    }

                    bookingForm.requestSubmit();
                    
                },
                prefill: {
                    name: customerEmail,
                    email: customerEmail,
                    contact: customerContact
                }, 
                theme: { color: "#3399cc" },
            };
            const razor = new Razorpay(options);
            razor.open();
        });



    </script>


</body>
</html>